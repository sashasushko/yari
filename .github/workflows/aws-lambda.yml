# This starts up a simulator that tries to do what our Lambda@Edge does.

name: AWS Lambda@Edge

on:
  pull_request:
    branches:
      - main
    paths:
      - deployer/aws-lambda/**
      - libs/**
      - .github/workflows/aws-lambda.yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            package-lock.json
            deployer/aws-lambda/content-origin-request/package-lock.json
            deployer/aws-lambda/content-origin-response/package-lock.json

      - name: Install all npm packages (ROOT)
        run: npm ci

      # Note!
      # npm workspaces share a single node_modules directory in the root,
      # but we need individual node_modules directory for each lambda, so
      # that we can package them. So we cannot add them as npm workspaces.
      #
      # This means we need to manually install each lambda's dependencies:

      - name: Install all npm packages (content-origin-request)
        working-directory: deployer/aws-lambda/content-origin-request
        run: npm ci

      - name: Install all npm packages (content-origin-response)
        working-directory: deployer/aws-lambda/content-origin-response
        run: npm ci

      - name: Run test server
        working-directory: deployer/aws-lambda/tests
        run: npm run serve > /tmp/stdout.log 2> /tmp/stderr.log &

      - name: Check that the server started
        run: curl --retry-connrefused --retry 5 -I http://localhost:7000/ping

      - name: Preflight the integration tests
        run: |
          curl -I http://localhost:7000/docs/Web
          curl -I http://localhost:7000/en-US/docs/Web/

      - name: End-to-end test
        working-directory: deployer/aws-lambda/tests
        run: npm run test-server

      - name: Debug any server outputs
        if: failure()
        run: |
          echo "____STDOUT____"
          cat /tmp/stdout.log
          echo "____STDERR____"
          cat /tmp/stderr.log
